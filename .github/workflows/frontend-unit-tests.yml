name: Frontend Unit Tests

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: src/frontend/tennis-app/package-lock.json

      - name: Install dependencies
        working-directory: src/frontend/tennis-app
        run: npm ci # This is faster than npm install for CI environments

      - name: Run unit tests
        working-directory: src/frontend/tennis-app
        run: npm test -- --watchAll=false --ci --coverage

      - name: Upload test coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: src/frontend/tennis-app/coverage

      - name: Display Coverage Summary
        run: |
          echo "# Frontend Test Coverage Report" >> $GITHUB_STEP_SUMMARY
          echo "## Summary" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat src/frontend/tennis-app/coverage/coverage-summary.json | jq -r '
            "Statement Coverage: \(.total.statements.pct)%\nBranch Coverage: \(.total.branches.pct)%\nFunction Coverage: \(.total.functions.pct)%\nLine Coverage: \(.total.lines.pct)%"
          ' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: Check Coverage Thresholds
        run: |
          COVERAGE=$(cat src/frontend/tennis-app/coverage/coverage-summary.json)
          STATEMENTS=$(echo $COVERAGE | jq -r '.total.statements.pct')
          BRANCHES=$(echo $COVERAGE | jq -r '.total.branches.pct')
          FUNCTIONS=$(echo $COVERAGE | jq -r '.total.functions.pct')
          LINES=$(echo $COVERAGE | jq -r '.total.lines.pct')

          if (( $(echo "$STATEMENTS < 50" | bc -l) )) || \
             (( $(echo "$BRANCHES < 50" | bc -l) )) || \
             (( $(echo "$FUNCTIONS < 50" | bc -l) )) || \
             (( $(echo "$LINES < 50" | bc -l) )); then
            echo "❌ Coverage is below 50%"
            exit 1
          else
            echo "✅ Coverage is above 50%"
          fi
