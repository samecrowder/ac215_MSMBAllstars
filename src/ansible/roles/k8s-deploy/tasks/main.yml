---
- name: Debug variables
  debug:
    msg:
      - "IMAGE_TAG env var: '{{ lookup('env', 'IMAGE_TAG') }}'"
      - "Git SHA: '{{ lookup('pipe', 'git rev-parse HEAD') }}'"
      - "Current working directory: '{{ lookup('pipe', 'pwd') }}'"

- name: Show what image we're about to deploy
  debug:
    msg: "About to deploy image: gcr.io/tennis-match-predictor/api:{{ lookup('env', 'IMAGE_TAG') }}"

- name: Create default namespace
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: default

- name: Apply k8s configurations
  kubernetes.core.k8s:
    state: present
    src: ../../src/k8s-config.yaml
    namespace: default

- name: Deploy API
  kubernetes.core.k8s:
    state: present
    force: true
    namespace: default
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: api
        annotations:
          kubernetes.io/change-cause: "Deploy {{ lookup('env', 'IMAGE_TAG') }}"
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: api
        template:
          metadata:
            labels:
              app: api
            annotations:
              rollme: "{{ lookup('env', 'IMAGE_TAG') }}"
          spec:
            containers:
              - name: api
                image: "gcr.io/tennis-match-predictor/api:{{ lookup('env', 'IMAGE_TAG') }}"
                ports:
                  - containerPort: 8000
                env:
                  - name: PORT
                    valueFrom:
                      configMapKeyRef:
                        name: tennis-env
                        key: API_PORT
                envFrom:
                  - configMapRef:
                      name: tennis-env
                volumeMounts:
                  - mountPath: /secrets
                    name: gcp-key
                    readOnly: true
                imagePullPolicy: Always
            volumes:
              - name: gcp-key
                secret:
                  secretName: gcp-credentials

- name: Deploy Probability Model
  kubernetes.core.k8s:
    state: present
    force: true
    namespace: default
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: probability-model
        annotations:
          kubernetes.io/change-cause: "Deploy {{ lookup('env', 'IMAGE_TAG') }}"
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: probability-model
        template:
          metadata:
            labels:
              app: probability-model
            annotations:
              rollme: "{{ lookup('env', 'IMAGE_TAG') }}"
          spec:
            containers:
              - name: probability-model
                image: "gcr.io/tennis-match-predictor/probability-model:{{ lookup('env', 'IMAGE_TAG') }}"
                ports:
                  - containerPort: 8001
                env:
                  - name: PORT
                    valueFrom:
                      configMapKeyRef:
                        name: tennis-env
                        key: MODEL_PORT
                  - name: DATA_FILE
                    value: "training_data_lookback=10.pkl"
                  - name: WEIGHTS_FILE
                    value: "prob_model.pt"
                  - name: HIDDEN_SIZE
                    value: "32"
                  - name: NUM_LAYERS
                    value: "2"
                  - name: CUDA_VISIBLE_DEVICES
                    value: ""
                  - name: TORCH_DEVICE
                    value: "cpu"
                envFrom:
                  - configMapRef:
                      name: tennis-env
                volumeMounts:
                  - mountPath: /secrets
                    name: gcp-key
                    readOnly: true
                imagePullPolicy: Always
            volumes:
              - name: gcp-key
                secret:
                  secretName: gcp-credentials

- name: Deploy LLM Service
  kubernetes.core.k8s:
    state: present
    force: true
    namespace: default
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: llm
        annotations:
          kubernetes.io/change-cause: "Deploy {{ lookup('env', 'IMAGE_TAG') }}"
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: llm
        template:
          metadata:
            labels:
              app: llm
            annotations:
              rollme: "{{ lookup('env', 'IMAGE_TAG') }}"
          spec:
            containers:
              - name: llm
                image: "gcr.io/tennis-match-predictor/llm:{{ lookup('env', 'IMAGE_TAG') }}"
                ports:
                  - containerPort: 8002
                env:
                  - name: PORT
                    valueFrom:
                      configMapKeyRef:
                        name: tennis-env
                        key: LLM_PORT
                  - name: OLLAMA_HOST
                    valueFrom:
                      configMapKeyRef:
                        name: tennis-env
                        key: OLLAMA_HOST
                envFrom:
                  - configMapRef:
                      name: tennis-env
                volumeMounts:
                  - mountPath: /secrets
                    name: gcp-key
                    readOnly: true
                imagePullPolicy: Always
            volumes:
              - name: gcp-key
                secret:
                  secretName: gcp-credentials

- name: Deploy Ollama
  kubernetes.core.k8s:
    state: present
    force: true
    namespace: default
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: ollama
        annotations:
          kubernetes.io/change-cause: "Deploy {{ lookup('env', 'IMAGE_TAG') }}"
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: ollama
        template:
          metadata:
            labels:
              app: ollama
            annotations:
              rollme: "{{ lookup('env', 'IMAGE_TAG') }}"
          spec:
            containers:
              - name: ollama
                image: "gcr.io/tennis-match-predictor/ollama:{{ lookup('env', 'IMAGE_TAG') }}"
                ports:
                  - containerPort: 11434
                volumeMounts:
                  - mountPath: /root/.ollama
                    name: ollama-storage
                imagePullPolicy: Always
            volumes:
              - name: ollama-storage
                emptyDir: {}

- name: Create Managed Certificate
  kubernetes.core.k8s:
    state: present
    namespace: default
    definition:
      apiVersion: networking.gke.io/v1
      kind: ManagedCertificate
      metadata:
        name: api-cert
      spec:
        domains:
          - "34.56.62.222" # Your IP

- name: Create TLS Secret
  kubernetes.core.k8s:
    state: present
    namespace: default
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: api-tls
      type: kubernetes.io/tls
      data:
        # These will be populated by GKE once the certificate is ready
        tls.crt: ""
        tls.key: ""

- name: Deploy Ingress
  kubernetes.core.k8s:
    state: present
    namespace: default
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: api-ingress
        namespace: default
        annotations:
          kubernetes.io/ingress.class: "gce"
          kubernetes.io/ingress.allow-http: "false"
          networking.gke.io/managed-certificates: "api-cert"
      spec:
        tls:
          - secretName: api-tls
        rules:
          - http:
              paths:
                - path: /*
                  pathType: ImplementationSpecific
                  backend:
                    service:
                      name: api
                      port:
                        number: 8000
